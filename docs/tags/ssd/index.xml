<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSD on Superdanby</title>
    <link>https://superdanby.github.io/Blog/tags/ssd.html</link>
    <description>Recent content in SSD on Superdanby</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Dec 2018 22:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://superdanby.github.io/Blog/tags/ssd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Computer Organization</title>
      <link>https://superdanby.github.io/Blog/foundations-of-computer-science/computer-organization.html</link>
      <pubDate>Sun, 09 Dec 2018 22:00:00 +0800</pubDate>
      
      <guid>https://superdanby.github.io/Blog/foundations-of-computer-science/computer-organization.html</guid>
      <description>CPU  Control Unit  A logic circuit that controls the CPU in respond of the given instructions.  Arithmetic Logic Unit  logic operations, shift operations, arithmetic operations  Registers(basic C programming knowledge required)  word size: 64 bits vs 32 bits User accessible:  General purpose register: stores data or addresses Data register: stores data Address register: stores address Stack pointer: address of the top of the current program stack Base pointer: address of the starting position of the current stack frame Program counter: address of the next instruction Constant register: e.</description>
    </item>
    
    <item>
      <title>Computer Hardware</title>
      <link>https://superdanby.github.io/Blog/foundations-of-computer-science/computer-hardware.html</link>
      <pubDate>Thu, 29 Nov 2018 22:30:00 +0800</pubDate>
      
      <guid>https://superdanby.github.io/Blog/foundations-of-computer-science/computer-hardware.html</guid>
      <description>CPU  CU ALU Data registers I/O  Architecture: x86, x86-64, ARM, RISC-V, MIPS Vendors: Intel, AMD, Apple  Storage  Register Cache  L1 ~ L3 Motivation: Fetching data from main memory takes a lot of time.  (Main) memory = RAM  What is RAM Volatile  SRAM  Fast  DRAM  Slow  SDRAM  DDR1 ~ DDR4  Speed: 2133, 2400, 1600MHz  Non-volatile(NVRAM)  Flash   Massive Storage</description>
    </item>
    
  </channel>
</rss>